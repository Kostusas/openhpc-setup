#!/bin/bash

# ---------------------------- Begin OpenHPC Recipe ---------------------------------------
# Commands below are extracted from an OpenHPC install guide recipe and are intended for 
# execution on the master SMS host.
# -----------------------------------------------------------------------------------------

echo {{ sms_ip }} {{ sms_name }}.{{ ipaserver_domain }} {{ sms_name }} >> /etc/hosts
echo {{ sms_name }}.{{ ipaserver_domain }} > /etc/hostname
hostname -F /etc/hostname

# ------------------------------------------------------------
# Add baseline OpenHPC and provisioning services (Section 3.1 - 3.3)
# ------------------------------------------------------------

dnf install -y http://repos.openhpc.community/OpenHPC/3/EL_9/x86_64/ohpc-release-3-1.el9.x86_64.rpm
dnf install -y dnf-plugins-core
dnf config-manager --set-enabled crb
dnf -y install ohpc-base warewulf-ohpc hwloc-ohpc

# Enable NTP services on SMS host
systemctl enable chronyd.service
echo "local stratum 10" >> /etc/chrony.conf
echo "server {{ ntp_server }}" >> /etc/chrony.conf
echo "allow all" >> /etc/chrony.conf
systemctl restart chronyd

# -------------------------------------------------------------
# Add resource management services on master node (Section 3.4)
# -------------------------------------------------------------

dnf -y install ohpc-slurm-server
cp /etc/slurm/slurm.conf.ohpc /etc/slurm/slurm.conf
cp /etc/slurm/cgroup.conf.example /etc/slurm/cgroup.conf
perl -pi -e "s/SlurmctldHost=\S+/SlurmctldHost={{ sms_name }}/" /etc/slurm/slurm.conf

# -------------------------------------------------------------
# Complete basic Warewulf setup for master node (Section 3.7)
# -------------------------------------------------------------

# Enable internal interface for provisioning
ip link set dev {{ sms_eth_internal }} up
ip address add {{ sms_ip }}/{{ internal_netmask }} broadcast + dev {{ sms_eth_internal }}

# Edit the warewulf.conf file to use appropriate interface and settings
perl -pi -e "s/ipaddr:.*/ipaddr: {{ sms_ip }}/" /etc/warewulf/warewulf.conf
perl -pi -e "s/netmask:.*/netmask: {{ internal_netmask }}/" /etc/warewulf/warewulf.conf
perl -pi -e "s/network:.*/network: {{ internal_network }}/" /etc/warewulf/warewulf.conf
perl -pi -e 's/template:.*/template: static/' /etc/warewulf/warewulf.conf
perl -pi -e "s/range start:.*/range start: {{ dhcp_compute_ip_start }}/" /etc/warewulf/warewulf.conf
perl -pi -e "s/range end:.*/range end: {{ dhcp_compute_ip_end }}/" /etc/warewulf/warewulf.conf
perl -pi -e "s/mount: false/mount: true/" /etc/warewulf/warewulf.conf

# Set default network configuration
wwctl profile set -y default --netmask={{ internal_netmask }}
wwctl profile set -y default --gateway={{ ipv4_gateway }}
wwctl profile set -y default --netdev=default --nettagadd=DNS={{ dns_server }}

# Configure /etc/hostname on master and compute nodes
perl -pi -e "s/warewulf/{{ sms_name }}/" /srv/warewulf/overlays/host/rootfs/etc/hosts.ww
perl -pi -e "s/warewulf/{{ sms_name }}/" /srv/warewulf/overlays/generic/rootfs/etc/hosts.ww


# Bugfix: dhcpd.template does not set next-server
echo "next-server {{ sms_ip }};" >> /srv/warewulf/overlays/host/rootfs/etc/dhcpd.conf.ww

# Configuring Warewulf will restart/enable relevant services to support provisioning
systemctl enable --now warewulfd
wwctl configure --all

# Generate ssh keys (usually generated on login)
bash /etc/profile.d/ssh_setup.sh

# Rocky 9.4 specific: Fix permission issues for Munge
chmod g-w /etc/ 

# -------------------------------------------------------------
# Define compute image for provisioning (Section 3.8)
# -------------------------------------------------------------

# Leave the image building out for now

# Define chroot location
export CHROOT=/srv/warewulf/chroots/rocky-9.4/rootfs

# ----------------------------------------------
# Configure PAM (Section 3.8.4)
# ----------------------------------------------

echo "account required pam_slurm.so" >> $CHROOT/etc/pam.d/sshd

# ----------------------------------------------
# Enable forwarding of system logs (Section 3.8.4.7)
# ----------------------------------------------

# Configure SMS to receive messages and reload rsyslog configuration
echo "module(load="imudp")" >> /etc/rsyslog.d/ohpc.conf
echo "input(type="imudp" port="514")" >> /etc/rsyslog.d/ohpc.conf
systemctl restart rsyslog

# Define compute node forwarding destination
echo "*.* action(type=\"omfwd\" Target=\"{{ sms_ip }}\" Port=\"514\" " \
"Protocol=\"udp\")">> $CHROOT/etc/rsyslog.conf

# Disable most local logging on computes. Emergency and boot logs will remain on the compute nodes
perl -pi -e "s/^\*\.info/\\#\*\.info/" $CHROOT/etc/rsyslog.conf
perl -pi -e "s/^authpriv/\\#authpriv/" $CHROOT/etc/rsyslog.conf
perl -pi -e "s/^mail/\\#mail/" $CHROOT/etc/rsyslog.conf
perl -pi -e "s/^cron/\\#cron/" $CHROOT/etc/rsyslog.conf
perl -pi -e "s/^uucp/\\#uucp/" $CHROOT/etc/rsyslog.conf

# ----------------------------------------------
# Add NHC (Section 3.8.4.12)
# ----------------------------------------------

# Install NHC on master and compute nodes
dnf -y install nhc-ohpc
dnf -y --installroot=$CHROOT install nhc-ohpc

# Register as SLURM's health check program
echo "HealthCheckProgram=/usr/sbin/nhc" >> /etc/slurm/slurm.conf
echo "HealthCheckInterval=300" >> /etc/slurm/slurm.conf # execute every five minutes


# --------------------------------------
# Import files (Section 3.8.5)
# --------------------------------------

# Add the following to support unprivileged user namespaces for tools like Apptainer
wwctl overlay import generic /etc/subuid
wwctl overlay import generic /etc/subgid

# Identify master host as local NTP server
echo "server {{ sms_ip }} iburst" | wwctl overlay import generic <(cat) /etc/chrony.conf


# Configure Slurm server in the overlay (using "configless" option)
wwctl overlay mkdir generic /etc/sysconfig/
wwctl overlay import generic <(echo SLURMD_OPTIONS="--conf-server {{ sms_ip }}") /etc/sysconfig/slurmd

# Configure munge
wwctl overlay mkdir generic --mode 0700 /etc/munge
wwctl overlay import generic /etc/munge/munge.key
wwctl overlay chown generic /etc/munge/munge.key $(id -u munge) $(id -g munge)
wwctl overlay chown generic /etc/munge $(id -u munge) $(id -g munge)

wwctl overlay mkdir generic /etc/sysconfig/network-scripts/
wwctl overlay import generic /opt/ohpc/pub/examples/network/centos/ifcfg-ib0.ww \
/etc/sysconfig/network-scripts/ifcfg-ib0.ww

# --------------------------------------
# Finalizing provisioning configuration (Section 3.9)
# --------------------------------------

# --------------------------------------
# Build container image and overlays (Section 3.9.1)
# --------------------------------------

# Build image
# wwctl container build rocky-9.4
wwctl overlay build

# ----------------------------------------------
# Remaining installs (Section  4.1 - 4.5)
# ----------------------------------------------

dnf -y install ohpc-autotools
dnf -y install EasyBuild-ohpc
dnf -y install hwloc-ohpc
dnf -y install spack-ohpc
dnf -y install valgrind-ohpc
dnf -y install gnu14-compilers-ohpc
dnf -y install openmpi5-pmix-gnu14-ohpc mpich-ofi-gnu14-ohpc
dnf -y install mpich-ucx-gnu14-ohpc
dnf -y install ohpc-gnu14-perf-tools
dnf -y install lmod-defaults-gnu14-openmpi5-ohpc

# ----------------------------------------------
# Additional fixes 
# ----------------------------------------------

setfacl -Rm u:slurm:rwx /var/log/ # fix slurmctld log permissions